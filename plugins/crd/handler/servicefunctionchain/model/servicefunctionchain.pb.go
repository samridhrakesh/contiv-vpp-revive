// Copyright (c) 2019 Cisco and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: servicefunctionchain.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceFunctionChain_ServiceFunction_Type int32

const (
	ServiceFunctionChain_ServiceFunction_Pod               ServiceFunctionChain_ServiceFunction_Type = 0
	ServiceFunctionChain_ServiceFunction_ExternalInterface ServiceFunctionChain_ServiceFunction_Type = 1
)

// Enum value maps for ServiceFunctionChain_ServiceFunction_Type.
var (
	ServiceFunctionChain_ServiceFunction_Type_name = map[int32]string{
		0: "Pod",
		1: "ExternalInterface",
	}
	ServiceFunctionChain_ServiceFunction_Type_value = map[string]int32{
		"Pod":               0,
		"ExternalInterface": 1,
	}
)

func (x ServiceFunctionChain_ServiceFunction_Type) Enum() *ServiceFunctionChain_ServiceFunction_Type {
	p := new(ServiceFunctionChain_ServiceFunction_Type)
	*p = x
	return p
}

func (x ServiceFunctionChain_ServiceFunction_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceFunctionChain_ServiceFunction_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_servicefunctionchain_proto_enumTypes[0].Descriptor()
}

func (ServiceFunctionChain_ServiceFunction_Type) Type() protoreflect.EnumType {
	return &file_servicefunctionchain_proto_enumTypes[0]
}

func (x ServiceFunctionChain_ServiceFunction_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceFunctionChain_ServiceFunction_Type.Descriptor instead.
func (ServiceFunctionChain_ServiceFunction_Type) EnumDescriptor() ([]byte, []int) {
	return file_servicefunctionchain_proto_rawDescGZIP(), []int{0, 0, 0}
}

// ServiceFunctionChain is used to store definition of a service function chain as a k8s CRD resource.
type ServiceFunctionChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the chain.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// true if the service chain should be unidirectional (the traffic should pass in one way only).
	// Otherwise the chain is bidirectional (the traffic can pass both ways).
	Unidirectional bool `protobuf:"varint,2,opt,name=unidirectional,proto3" json:"unidirectional,omitempty"`
	// Name of the custom pod network where the chain resides
	// (if applicable, can be left blank for the default pod network).
	Network string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	// List of service functions (chain elements) in the chain.
	Chain []*ServiceFunctionChain_ServiceFunction `protobuf:"bytes,4,rep,name=chain,proto3" json:"chain,omitempty"`
}

func (x *ServiceFunctionChain) Reset() {
	*x = ServiceFunctionChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicefunctionchain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFunctionChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFunctionChain) ProtoMessage() {}

func (x *ServiceFunctionChain) ProtoReflect() protoreflect.Message {
	mi := &file_servicefunctionchain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFunctionChain.ProtoReflect.Descriptor instead.
func (*ServiceFunctionChain) Descriptor() ([]byte, []int) {
	return file_servicefunctionchain_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceFunctionChain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceFunctionChain) GetUnidirectional() bool {
	if x != nil {
		return x.Unidirectional
	}
	return false
}

func (x *ServiceFunctionChain) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ServiceFunctionChain) GetChain() []*ServiceFunctionChain_ServiceFunction {
	if x != nil {
		return x.Chain
	}
	return nil
}

type ServiceFunctionChain_ServiceFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the service function (optional).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of the service function.
	Type ServiceFunctionChain_ServiceFunction_Type `protobuf:"varint,2,opt,name=type,proto3,enum=model.ServiceFunctionChain_ServiceFunction_Type" json:"type,omitempty"`
	// Pod selector (k8s labels) identifying the pod(s)
	// (applicable for pod service function type).
	PodSelector map[string]string `protobuf:"bytes,3,rep,name=pod_selector,json=podSelector,proto3" json:"pod_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Interface trough which the traffic enters or leaves the pod / external interface. Applicable for:
	// - pods that use only a single interface for SFC (first/last pod in the chain
	//   or pods using the same interface for SFC input and output).
	// - external interfaces
	Interface string `protobuf:"bytes,6,opt,name=interface,proto3" json:"interface,omitempty"`
	// Interface trough which the traffic enters the service function. Applicable for:
	// - pods using different interfaces for SFC input and output
	InputInterface string `protobuf:"bytes,4,opt,name=input_interface,json=inputInterface,proto3" json:"input_interface,omitempty"`
	// Interface trough which the traffic leaves the service function. Applicable for:
	// - pods using different interfaces for SFC input and output
	OutputInterface string `protobuf:"bytes,5,opt,name=output_interface,json=outputInterface,proto3" json:"output_interface,omitempty"`
}

func (x *ServiceFunctionChain_ServiceFunction) Reset() {
	*x = ServiceFunctionChain_ServiceFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_servicefunctionchain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFunctionChain_ServiceFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFunctionChain_ServiceFunction) ProtoMessage() {}

func (x *ServiceFunctionChain_ServiceFunction) ProtoReflect() protoreflect.Message {
	mi := &file_servicefunctionchain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFunctionChain_ServiceFunction.ProtoReflect.Descriptor instead.
func (*ServiceFunctionChain_ServiceFunction) Descriptor() ([]byte, []int) {
	return file_servicefunctionchain_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServiceFunctionChain_ServiceFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceFunctionChain_ServiceFunction) GetType() ServiceFunctionChain_ServiceFunction_Type {
	if x != nil {
		return x.Type
	}
	return ServiceFunctionChain_ServiceFunction_Pod
}

func (x *ServiceFunctionChain_ServiceFunction) GetPodSelector() map[string]string {
	if x != nil {
		return x.PodSelector
	}
	return nil
}

func (x *ServiceFunctionChain_ServiceFunction) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *ServiceFunctionChain_ServiceFunction) GetInputInterface() string {
	if x != nil {
		return x.InputInterface
	}
	return ""
}

func (x *ServiceFunctionChain_ServiceFunction) GetOutputInterface() string {
	if x != nil {
		return x.OutputInterface
	}
	return ""
}

var File_servicefunctionchain_proto protoreflect.FileDescriptor

var file_servicefunctionchain_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0xd8, 0x04, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x41, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x1a, 0xa6, 0x03, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x70, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x6f, 0x64, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07,
	0x0a, 0x03, 0x50, 0x6f, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x10, 0x01, 0x42, 0x03,
	0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_servicefunctionchain_proto_rawDescOnce sync.Once
	file_servicefunctionchain_proto_rawDescData = file_servicefunctionchain_proto_rawDesc
)

func file_servicefunctionchain_proto_rawDescGZIP() []byte {
	file_servicefunctionchain_proto_rawDescOnce.Do(func() {
		file_servicefunctionchain_proto_rawDescData = protoimpl.X.CompressGZIP(file_servicefunctionchain_proto_rawDescData)
	})
	return file_servicefunctionchain_proto_rawDescData
}

var file_servicefunctionchain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_servicefunctionchain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_servicefunctionchain_proto_goTypes = []interface{}{
	(ServiceFunctionChain_ServiceFunction_Type)(0), // 0: model.ServiceFunctionChain.ServiceFunction.Type
	(*ServiceFunctionChain)(nil),                   // 1: model.ServiceFunctionChain
	(*ServiceFunctionChain_ServiceFunction)(nil),   // 2: model.ServiceFunctionChain.ServiceFunction
	nil, // 3: model.ServiceFunctionChain.ServiceFunction.PodSelectorEntry
}
var file_servicefunctionchain_proto_depIdxs = []int32{
	2, // 0: model.ServiceFunctionChain.chain:type_name -> model.ServiceFunctionChain.ServiceFunction
	0, // 1: model.ServiceFunctionChain.ServiceFunction.type:type_name -> model.ServiceFunctionChain.ServiceFunction.Type
	3, // 2: model.ServiceFunctionChain.ServiceFunction.pod_selector:type_name -> model.ServiceFunctionChain.ServiceFunction.PodSelectorEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_servicefunctionchain_proto_init() }
func file_servicefunctionchain_proto_init() {
	if File_servicefunctionchain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_servicefunctionchain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFunctionChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_servicefunctionchain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFunctionChain_ServiceFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_servicefunctionchain_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_servicefunctionchain_proto_goTypes,
		DependencyIndexes: file_servicefunctionchain_proto_depIdxs,
		EnumInfos:         file_servicefunctionchain_proto_enumTypes,
		MessageInfos:      file_servicefunctionchain_proto_msgTypes,
	}.Build()
	File_servicefunctionchain_proto = out.File
	file_servicefunctionchain_proto_rawDesc = nil
	file_servicefunctionchain_proto_goTypes = nil
	file_servicefunctionchain_proto_depIdxs = nil
}
